generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model allergy {
  id               Int                @id
  class            String?            @db.VarChar(255)
  type             String?            @db.VarChar(255)
  group            String?            @db.VarChar(255)
  allergen         String?            @db.VarChar(255)
  allergy_name     String?            @db.VarChar(255)
  product_allergen product_allergen[]
  users_allergy    users_allergy[]
}

model article {
  id          Int      @id
  title       String?  @db.VarChar(255)
  description String   @db.Text
  author      String?  @db.VarChar(255)
  content     String?  @db.Text
  img_url     String?  @db.VarChar(255)
  date        DateTime @db.Date
}

model grade {
  id         Int       @id
  grade_name String?   @db.Char(1)
  grade_desc String?   @db.VarChar(255)
  product    product[]
}

model history_product {
  id         String   @id @db.VarChar(255)
  product_id String?  @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(0)
  users_id   String?  @db.VarChar(255)
  users      users?   @relation(fields: [users_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "history_product_ibfk_1")
  product    product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "history_product_ibfk_2")

  @@index([users_id], map: "history_id")
  @@index([product_id], map: "product_id")
}

model label {
  id            Int             @id
  label_name    String?         @db.VarChar(255)
  label_desc    String?         @db.VarChar(255)
  product_label product_label[]
}

model product {
  id                String             @id @db.VarChar(255)
  name              String?            @db.VarChar(255)
  grades_id         Int?
  overall           String             @db.Text
  health_assessment String             @db.Text
  calories          String?            @db.VarChar(255)
  calories_ing      String?            @db.VarChar(255)
  protein           String?            @db.VarChar(255)
  protein_ing       String?            @db.VarChar(255)
  fat               String?            @db.VarChar(255)
  fat_ing           String?            @db.VarChar(255)
  fiber             String?            @db.VarChar(255)
  fiber_ing         String?            @db.VarChar(255)
  carbo             String?            @db.VarChar(255)
  carbo_ing         String?            @db.VarChar(255)
  sugar             String?            @db.VarChar(255)
  sugar_ing         String?            @db.VarChar(255)
  history_product   history_product[]
  grade             grade?             @relation(fields: [grades_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_ibfk_1")
  product_allergen  product_allergen[]
  product_label     product_label[]

  @@index([grades_id], map: "grades_id")
}

model product_allergen {
  id         String   @id @db.VarChar(255)
  product_id String?  @db.VarChar(255)
  allergy_id Int?
  allergen   String?  @db.VarChar(255)
  product    product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_allergen_ibfk_1")
  allergy    allergy? @relation(fields: [allergy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_allergen_ibfk_2")

  @@index([allergy_id], map: "allergy_id")
  @@index([product_id], map: "product_id")
}

model product_label {
  id         String   @id @db.VarChar(255)
  product_id String?  @db.VarChar(255)
  label_id   Int?
  product    product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_label_ibfk_1")
  label      label?   @relation(fields: [label_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_label_ibfk_2")

  @@index([label_id], map: "label_id")
  @@index([product_id], map: "product_id")
}

model users {
  id              String            @id @db.VarChar(255)
  name            String?           @db.VarChar(255)
  email           String?           @db.VarChar(255)
  password        String?           @db.VarChar(255)
  token           String?           @db.VarChar(255)
  created_at      DateTime          @default(now()) @db.Timestamp(0)
  refresh_token   String?           @db.VarChar(255)
  history_product history_product[]
  users_allergy   users_allergy[]
}

model users_allergy {
  id         String   @id @db.VarChar(255)
  users_id   String?  @db.VarChar(255)
  allergy_id Int?
  users      users?   @relation(fields: [users_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_allergy_ibfk_1")
  allergy    allergy? @relation(fields: [allergy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_allergy_ibfk_2")

  @@index([allergy_id], map: "allergy_id")
  @@index([users_id], map: "users_id")
}
